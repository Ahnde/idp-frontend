BNF - Grammar for FormSpecification


FORM =  { elementId: ID, elementType: "form", metadata : FORM_METADATA, descriptions: [DESCRIPTION *], children:[CHILD *] }

CHILD = QUESTION | GROUP

GROUP = { elementId: ID, elementType: "group",                          descriptions: [DESCRIPTION *], children:[CHILD +], repeatable : BOOL}

QUESTION = { elementId: ID, elementType: "question",                    descriptions: [DESCRIPTION *], interactives: [INTERACTIVE *] }

DESCRIPTION = {
                elementId: ID,
                descriptionType: DESCRIPTION_TYPE,

                (text: STRING | urls: [ URL *] ,)?
              }

DESCRIPTION_TYPE = "text" | "image" | "video"

INTERACTIVE = {
                elementId: ID,
                interactiveType: INTERACTIVE_TYPE,
                mappingKey : MAPPING_KEY,
                validators: [VALIDATOR +],
                interactiveDetails: [INTERACTIVE_DETAIL *]
              }


INTERACTIVE_DETAIL = {
                        (label: STRING, )?
                        (postLabel: STRING, )?
                        (length: INTEGER, )?
                        (placeholder: STRING, )?
                        (inputType: INPUT_TYPE, )?
                        (dateFormat: DATE_FORMAT, )?
                        (options: [OPTION +], )?
                        (defaultOption: INTEGER )?
                      }

INTERACTIVE_TYPE = "textarea" | "input" | "date" | "number" | "radio" | "dropdown" | "checkbox"

INPUT_TYPE = "text" | "password" | "number"

VALIDATOR = {
              elementId: ID,
              validatorType: VALIDATOR_TYPE,
              expression: VALIDATOR_EXPRESSION
            }

VALIDATOR_TYPE = "isRequired" | "minLength" | "maxLength" | "minDate" | "maxDate" | "custom"

VALIDATOR_EXPRESSION = REGEX | FUNCTION

DATE_FORMAT = {
                format: "..." //iso standard,
                default: "DD/MM/YYYY"
              }

FORM_METADATA = ...

MAPPING_KEY = STRING
ID = STRING

FUNCTION = "..."
REGEX = "..."

URL = STRING
STRING = [a-zA-Z0-9]*
INTEGER = [1-9][0-9]*
BOOL = true | false
